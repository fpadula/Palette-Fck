<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Creating inputs

color_preview = instance_create(698, 370, obj_color_preview);

hex_input = instance_create(700, 467, obj_hex_input);
hex_input.when_full[0] = id;
hex_input.when_full[1] = ev_other;
hex_input.when_full[2] = ev_user0;

hue_input = instance_create(700, 502, obj_hue_input);
hue_input.when_keypress[0] = id;
hue_input.when_keypress[1] = ev_other;
hue_input.when_keypress[2] = ev_user2;

sat_input = instance_create(700, 534, obj_sat_input);
sat_input.when_keypress[0] = id;
sat_input.when_keypress[1] = ev_other;
sat_input.when_keypress[2] = ev_user2;

lum_input = instance_create(700, 568, obj_lum_input);
lum_input.when_keypress[0] = id;
lum_input.when_keypress[1] = ev_other;
lum_input.when_keypress[2] = ev_user2;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Populate HEX inputs and HSL inputs from preview image_blend
var rgb;
rgb[0] = colour_get_red(color_preview.image_blend);
rgb[1] = colour_get_green(color_preview.image_blend);
rgb[2] = colour_get_blue(color_preview.image_blend);

var hex_txt;

hex_txt = "";
hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[0]/16)) + convert_digit_dec_hex(rgb[0]%16);
hex_input.text = hex_txt;

hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[1]/16)) + convert_digit_dec_hex(rgb[1]%16);
hex_input.text = hex_txt;

hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[2]/16)) + convert_digit_dec_hex(rgb[2]%16);
hex_input.text = hex_txt;
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checking if edit boxes have correct values
/*
var hue_v, sat_v, lum_v;

hue_v = real(hue_input.text);
hue_v = clamp(hue_v, 0, 360);
hue_input.text = string(hue_v);


if !((string_length(sat_input.text) == 2) &amp;&amp; (string_count( ".",sat_input.text) == 1)){
    sat_v = real(sat_input.text);
    sat_v = clamp(sat_v, 0, 1);
    sat_input.text = string(sat_v);
}

lum_v = real(lum_input.text);
lum_v = clamp(lum_v, 0, 1);
lum_input.text = string(lum_v);
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Populate HEX input HSL inputs
event_user(3);
var color = make_colour_hex(hex_input.text);
show_debug_message("Color: " + string(color));
color_preview.image_blend = color;

var rgb = hsl_to_rgb(real(hue_input.text), real(sat_input.text), real(lum_input.text));
color_preview.image_blend = make_colour_rgb(rgb[0], rgb[1], rgb[2]);
var hex_txt;

hex_txt = "";
hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[0]/16)) + convert_digit_dec_hex(rgb[0]%16);
hex_input.text = hex_txt;

hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[1]/16)) + convert_digit_dec_hex(rgb[1]%16);
hex_input.text = hex_txt;

hex_txt = hex_txt + convert_digit_dec_hex( floor(rgb[2]/16)) + convert_digit_dec_hex(rgb[2]%16);
hex_input.text = hex_txt;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Populate inputs with value from hex input
var color = make_colour_hex(hex_input.text);
show_debug_message("Color: " + string(color));
color_preview.image_blend = color;

var hsl = rgb_to_hsl(colour_get_red(color), colour_get_green(color), colour_get_blue(color));
hue_input.text = string(hsl[0]);
sat_input.text = string(hsl[1]);
lum_input.text = string(hsl[2]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
