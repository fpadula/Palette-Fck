<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>can_perform_grow = false;
final_scale = 0.0;
tolerance = 0.001;
easing_time = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(can_perform_grow){
    if(!instance_exists(obj_to_grow)){
        instance_destroy();
        exit;
    }
    if(easing_time &gt; time){
        if(axis == "x"){
            obj_to_grow.image_xscale  = final_scale;    
        }
        else if(axis == "y"){
            obj_to_grow.image_yscale  = final_scale;    
        }
        else if(axis == "xy"){
            obj_to_grow.image_xscale  = final_scale;    
            obj_to_grow.image_yscale  = final_scale;    
            //show_debug_message("Xscale: " + string(obj_to_grow.image_xscale) + ", Yscale: " + string(obj_to_grow.image_yscale));            
        }
        instance_destroy();
    }
    else if(axis == "x"){
        obj_to_grow.image_xscale  = script_execute(easing_script, easing_time, original_scale, deltaScale, time);    
    }
    else if(axis == "y"){
        obj_to_grow.image_yscale  = script_execute(easing_script, easing_time, original_scale, deltaScale, time);    
    }
    else if(axis == "xy"){
        obj_to_grow.image_xscale  = script_execute(easing_script, easing_time, original_scale_x, deltaScale_x, time);    
        obj_to_grow.image_yscale  = script_execute(easing_script, easing_time, original_scale_y, deltaScale_y, time);  
        //show_debug_message("Xscale: " + string(obj_to_grow.image_xscale) + ", Yscale: " + string(obj_to_grow.image_yscale));
    }
    easing_time++;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
